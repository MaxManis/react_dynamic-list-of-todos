{"version":3,"sources":["types/Category.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Category","TodoList","todos","onOpen","opened","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","setCategory","setQwery","qwery","useState","currentQwery","setCurrentQwery","setQweryDebounce","useCallback","func","wait","timer","newQwery","clearTimeout","setTimeout","debounce","onChange","event","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","then","fetch","res","json","TodoModal","isLoading","setIsLoadingUser","onClose","currentTodo","user","setUser","useEffect","getUserFromApi","a","userId","response","Error","href","email","name","App","isLoadingUser","isLoadingTodo","setIsLoadingTodo","isOpenTodo","setIsOpenTodo","category","setTodos","loadTodosFromApi","todoId","byQwery","filter","toLowerCase","match","filterTodos","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8532b823.chunk.js","sourcesContent":["export enum Category {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onOpen: (n: number) => void,\n  opened: number,\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, onOpen, opened }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': opened === todo.id,\n          })}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={\n                todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'\n              }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                onOpen(todo.id);\n              }}\n            >\n              <span className=\"icon\">\n                <i className={classNames('far', {\n                  'fa-eye': opened !== todo.id,\n                  'fa-eye-slash': opened === todo.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { useCallback, useState } from 'react';\nimport { Category } from '../../types/Category';\n\n// DEBOUNCE DECORATOR:\nconst debounce = (func: (qwery: string) => void, wait: number) => {\n  let timer: NodeJS.Timeout;\n\n  return (newQwery: string) => {\n    clearTimeout(timer);\n\n    timer = setTimeout(func, wait, newQwery);\n  };\n};\n\ntype Props = {\n  setCategory: (category: Category) => void,\n  setQwery: (qwery: string) => void,\n  qwery: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setCategory,\n  setQwery,\n  qwery,\n}) => {\n  const [currentQwery, setCurrentQwery] = useState('');\n\n  const setQweryDebounce = useCallback(\n    debounce(setQwery, 700),\n    [],\n  );\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              setCategory(event.target.value as Category);\n            }}\n          >\n            <option value={Category.ALL}>All</option>\n            <option value={Category.ACTIVE}>Active</option>\n            <option value={Category.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={currentQwery}\n          onChange={(event) => {\n            setCurrentQwery(event.target.value);\n            setQweryDebounce(event.target.value);\n          }}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {qwery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQwery('');\n                setCurrentQwery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  isLoading: boolean,\n  setIsLoadingUser: (value: boolean) => void\n  onClose: (value: number) => void\n  currentTodo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  isLoading,\n  setIsLoadingUser,\n  onClose,\n  currentTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const getUserFromApi = async () => {\n      try {\n        const response = await getUser(currentTodo.userId);\n\n        setUser(response);\n        setIsLoadingUser(false);\n      } catch (e) {\n        throw new Error('Error on loading user');\n      }\n    };\n\n    getUserFromApi();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {currentTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onClose(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Category } from './types/Category';\n\nexport const App: React.FC = () => {\n  const [isLoadingUser, setIsLoadingUser] = useState(false);\n  const [isLoadingTodo, setIsLoadingTodo] = useState(true);\n  const [isOpenTodo, setIsOpenTodo] = useState(0);\n  const [qwery, setQwery] = useState('');\n  const [category, setCategory] = useState<Category>(Category.ALL);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    const loadTodosFromApi = async () => {\n      try {\n        const response = await getTodos();\n\n        setTodos(response);\n      } catch (e) {\n        throw new Error('Error on loading todos');\n      }\n\n      setIsLoadingTodo(false);\n    };\n\n    loadTodosFromApi();\n  }, []);\n\n  const onOpenTodo = (todoId: number) => {\n    setIsOpenTodo(todoId);\n    setIsLoadingUser(true);\n  };\n\n  const filterTodos = () => {\n    const byQwery = todos.filter(todo => {\n      const title = todo.title.toLowerCase();\n\n      return title.match(qwery.toLowerCase());\n    });\n\n    if (category === Category.COMPLETED) {\n      return byQwery.filter(todo => (todo.completed));\n    }\n\n    if (category === Category.ACTIVE) {\n      return byQwery.filter(todo => (!todo.completed));\n    }\n\n    return byQwery;\n  };\n\n  const getTodo = (todoId: number) => {\n    return todos.find(todo => todo.id === todoId) || todos[0];\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setCategory={setCategory}\n                setQwery={setQwery}\n                qwery={qwery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoadingTodo ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filterTodos()}\n                  onOpen={onOpenTodo}\n                  opened={isOpenTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isOpenTodo && (\n        <TodoModal\n          isLoading={isLoadingUser}\n          setIsLoadingUser={setIsLoadingUser}\n          onClose={setIsOpenTodo}\n          currentTodo={getTodo(isOpenTodo)}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}